
@{
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Mock Auth</title>
    <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css"
          integrity="sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT" rel="stylesheet">
</head>
<body class="bg-light">
<div class="container bg-body p-4 my-4">
    <aside class="card" style="width: 32rem; float: right;">
        <div class="card-header">
            Settings
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <label class="col-sm-3 col-form-label">Authority</label>
                <div class="col-sm-9"><input class="form-control" value="@Url.Action("Index", "Home", null, Context.Request.Scheme)" readonly onfocus="this.select()" /></div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-3 col-form-label">Configuration</label>
                <div class="col-sm-9"><input class="form-control" value="@Url.Action("DiscoveryDocument", "Discovery", null, Context.Request.Scheme)" readonly onfocus="this.select()" /></div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-3 col-form-label">Client Id</label>
                <div class="col-sm-9">
                    <input class="form-control" value="MockId" readonly onfocus="this.select()"/>
                    <div class="form-text">Any client Id will work</div>
                </div>
                
            </div>
            <div class="row mb-3">
                <label class="col-sm-3 col-form-label">Client Secret</label>
                <div class="col-sm-9">
                    <input class="form-control" value="MockSecret" readonly onfocus="this.select()"/>
                    <div class="form-text">Any client secret will work</div>
                </div>
            </div>
        </div>
    </aside>
    <h1 id="mockauth">MockAuth</h1>
    <p>A simple, lightweight mock OIDC (OpenID Connect) service designed for development and testing environments.
        MockAuth
        allows you to quickly define test users and simulate an OIDC authentication flow with a simple one-click login,
        eliminating the need for complex password management or client/application registration setup.</p>
    <h2 id="features">Quick Start</h2>
    <p>adsf sdaf dsfa </p>
    <h2 id="features">Features</h2>
    <ul>
        <li><strong>Mock OIDC Provider:</strong> Implements the necessary OIDC endpoints (<code>/.well-known/openid-configuration</code>,
            <code>/auth</code>, <code>/token</code>, <code>/userinfo</code>) to simulate an identity provider.
        </li>
        <li><strong>Easy User Definition:</strong> Define your test users in a simple configuration file (e.g., YAML or
            JSON).
        </li>
        <li><strong>One-Click Login:</strong> The <code>/auth</code> endpoint presents a list of your defined users,
            allowing you to authenticate as any user with a single click.
        </li>
        <li><strong>Passwordless:</strong> No passwords or credentials are required to log in via the one-click
            interface.
        </li>
        <li><strong>No Client Registration:</strong> Integrate your client applications without needing to register them
            or
            manage <code>client_id</code>/<code>client_secret</code> pairs (though it can be configured to accept
            specific
            ones if needed).
        </li>
        <li><strong>Simplified Testing:</strong> Streamline integration tests and local development for applications
            that
            rely on OIDC authentication.
        </li>
    </ul>
    <h2 id="why-use-mockauth">Why Use MockAuth?</h2>
    <p>Developing and testing applications that use OIDC can be cumbersome:</p>
    <ul>
        <li>Setting up a full identity provider (like Keycloak, Auth0, Okta, etc.) is often overkill and time-consuming
            for
            simple testing.
        </li>
        <li>Managing test users and their passwords adds overhead.</li>
        <li>Dealing with client registration and secrets can complicate test automation.</li>
    </ul>
    <p>MockAuth provides a dead-simple alternative. Just run the service, tell it about your test users, and point your
        applicationâ€™s OIDC configuration at MockAuth.</p>

</div>
</body>
</html>